name: Build, Lint, Test, Doc

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-bootloader:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install nasm
      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./target
          key: ${{ runner.os }}-cargo-build-bootloader
      - name: Cache Toolchain
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup/toolchains
          key: ${{ runner.os }}-rustup-${{ hashFiles('rust-toolchain.toml') }}
      - name: Setup Build System
        run: make
      - name: Build Bootloader
        run: make build-bootloader
      - name: Upload Bootloader
        uses: actions/upload-artifact@v4
        with:
          name: bootloader
          path: target/uefi/debug/bootloader.efi
  build-kernel:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install nasm
      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./target
          key: ${{ runner.os }}-cargo-build-kernel
      - name: Cache Toolchain
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup/toolchains
          key: ${{ runner.os }}-rustup-${{ hashFiles('rust-toolchain.toml') }}
      - name: Setup Build System
        run: make
      - name: Build Kernel
        run: make build-kernel
      - name: Upload Kernel
        uses: actions/upload-artifact@v4
        with:
          name: kernel
          path: target/kernel/debug/kernel
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install nasm
      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./target
          key: ${{ runner.os }}-cargo-lint
      - name: Cache Toolchain
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup/toolchains
          key: ${{ runner.os }}-rustup-${{ hashFiles('rust-toolchain.toml') }}
      - name: Setup Build System
        run: make
      - name: Lint
        run: make clippy

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./target
          key: ${{ runner.os }}-cargo-test
      - name: Cache Toolchain
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup/toolchains
          key: ${{ runner.os }}-rustup-${{ hashFiles('rust-toolchain.toml') }}
      - name: Setup Build System
        run: make
      - name: Run tests
        run: make test
  doc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install nasm
      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ./target
          key: ${{ runner.os }}-cargo-doc
      - name: Cache Toolchain
        uses: actions/cache@v4
        with:
          path: |
            ~/.rustup/toolchains
          key: ${{ runner.os }}-rustup-${{ hashFiles('rust-toolchain.toml') }}
      - name: Setup Build System
        run: make
      - name: Generate Docs
        run: make doc
      - name: Upload Docs
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: target/doc
